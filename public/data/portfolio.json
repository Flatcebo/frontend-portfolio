[
  {
    "title": "PMS(Project Management System)",
    "intro": "사내 프로젝트를 관리하는 서비스입니다.",
    "part": ["Design", "Publishing", "Frontend", "Backend"],
    "period": "2022.11 ~ 2023.01",
    "language": "typescript",
    "frontStacks": [
      "NextJS",
      "Tailwind CSS",
      "Styled-Components",
      "ChartJS",
      "swr"
    ],
    "backStacks": ["NextJS", "Prisma", "MySQL", "MariaDB"],
    "imgUrl": "",
    "gitUrl": "https://github.com/Flatcebo/pms",
    "url": "",
    "task": [
      {
        "front": [
          "모든 페이지의 디자인과 퍼블리싱을 진행",
          "회원가입/로그인 기능 구현",
          "프로젝트 등록 기능 구현",
          "ChartJS를 사용해서 프로젝트 진행도 노출"
        ],
        "back": ["Prisma Setting", "Prisma Data Modeling", "프로젝트 CRUD 구현"]
      }
    ],
    "desc": ""
  },
  {
    "title": "어복톡",
    "intro": "사내 플랫폼들과 연동하고, 낚시인들을 시작으로 그 외의 이용자들까지 사용하기 위한 채팅 앱 입니다.",
    "language": "typescript",
    "part": ["Planning", "Frontend", "Backend"],
    "period": "2023.02 ~ 2023.07",
    "frontStacks": ["React-Native"],
    "backStacks": [],
    "imgUrl": "",
    "gitUrl": "",
    "url": "",
    "task": [
      {
        "front": ["모든 스크린 퍼블리싱을 진행"],
        "back": ["ERD 설계"]
      }
    ],
    "desc": ""
  },
  {
    "title": "Scraper",
    "intro": "낚시배 운영중이신 선주, 선장님들의 데이터를 추출합니다.",
    "language": "typescript",
    "part": ["Planning", "Frontend", "Backend"],
    "period": "2023.08 ~ 2023.09",
    "frontStacks": ["NextJS", "swr", "react-hook-form", "cheerio"],
    "backStacks": ["NextJS", "Prisma", "MySQL", "MariaDB"],
    "imgUrl": "",
    "gitUrl": "https://github.com/Flatcebo/crawler-server",
    "url": "",
    "task": [
      {
        "front": [
          "자동 페이지를 이동하여 HTML의 class/id 등을 분석하며 cheerio로 Target Data 추출",
          "추출한 데이터 excel 다운로드 구현"
        ],
        "back": [
          "Prisma Setting",
          "Prisma Data Modeling",
          "REST API 구현",
          "선주, 선장 정보 Create, Delete 구현"
        ]
      }
    ],
    "desc": ""
  },
  {
    "title": "SIPPIN",
    "intro": "술집 정보를 제공하며 실시간으로 예약할 수 있는 앱 입니다.",
    "period": "2023.12 ~ 2024.02",
    "frontStacks": ["React-Native"],
    "backStacks": ["Firebase"],
    "imgUrl": "",
    "gitUrl": "https://github.com/Flatcebo/Sippin",
    "url": "",
    "part": ["Planning", "Design", "Frontend", "Backend"],
    "task": [
      {
        "front": [
          "화면 설계",
          "모든 스크린 퍼블리싱 진행",
          "회원가입/로그인 기능 구현",
          "최신/추천, 지역/주종 필터링 구현",
          "좌표 데이터에 맞게 Marker 찍기 및 커스텀",
          "지도 내의 업체 슬라이더 동작시 해당 업체의 마커로 이동하는 기능 구현"
        ],
        "back": ["ERD 설계"]
      }
    ],
    "desc": ""
  },
  {
    "title": "HORIZON",
    "intro": "동영상이 화면에 가득차는 반응형 기업 홈페이지 입니다.",
    "period": "2024.03 ~ 2024.03",
    "frontStacks": ["ReactJS", "EmailJS", "react-hook-form", "Tailwind CSS"],
    "backStacks": ["Firebase"],
    "imgUrl": "",
    "gitUrl": "",
    "url": "https://horizon-z.com",
    "part": ["Publishing", "Frontend", "Backend"],
    "task": [
      {
        "front": [
          "모든 페이지의 PC/MO 반응형 퍼블리싱 진행",
          "유튜브 동영상을 화면에 가득차게 작업",
          "크로스 브라우징",
          "뮤직 플레이어 기능 구현",
          "이메일을 입력하면 회사 소개서가 발송되게 작업",
          "미팅 스케줄을 잡기위한 Calendly 연동"
        ],
        "back": []
      }
    ],
    "desc": "동영상과 디바이스의 화면 비율이 맞지 않아 영상이 가득차지 않고, 빈공간이 생기는 문제가 발생해서 영상 플레이어의 크기를 늘리고 디바이스 화면의 가운데에 위치하게 작업했습니다."
  },
  {
    "title": "온누리관광/관리자 웹",
    "intro": "견적상담 신청 및 업체 소개를 위한 관광버스 업체의 홈페이지 입니다.",
    "period": "2024.06 ~ 2024.07",
    "frontStacks": ["NextJS", "Tailwind CSS", "react-hook-form"],
    "backStacks": [
      "NextJS",
      "Prisma",
      "Vercel",
      "PostgreSQL",
      "PostGIS",
      "SENS SMS API",
      "Naver Open API"
    ],
    "imgUrl": "",
    "gitUrl": "",
    "url": "https://온누리관광.com",
    "part": ["Design", "Publishing", "Frontend", "Backend"],
    "task": [
      {
        "front": [
          "모든 페이지의 PC/MO 반응형 퍼블리싱 진행",
          "SEO를 위해 meta/sitemap/robot 설정",
          "Skeleton UI 적용",
          "경로 300m 내의 휴게소 데이터를 Marker로 렌더링",
          "경로간 좌표 데이터를 이용하여 지도에 Polyline, Marker 렌더링"
        ],
        "back": [
          "REST API 구현",
          "버스, 관광지, 예약 정보 CRUD 구현",
          "LMS 발송을 위해 SENS에 맞게 signature hasing하여 api 요청",
          "SQL문을 작성하여 query를 날려서 PostGIS로 전국 휴게소 정보를 공간 인덱싱하여 저장하고, 입력한 위치 기준 반경 300m 이내의 휴게소 데이터를 반환",
          "클라이언트에서 받아온 주소를 naver geocode api를 사용하여 좌표로 변환",
          "출발지/경유지/도착지 좌표를 naver map direction15를 사용하여 경로간 좌표를 반환",
          "Vercel blob으로 이미지 저장 기능 구현"
        ]
      }
    ],
    "desc": ""
  },
  {
    "title": "이미지 업로드 앱/관리자 웹",
    "intro": "작업자가 인테리어 하자의 사진을 어플 내에 등록하여 업로드하고, 사무 직원이 확인하고 승인 할 수 있으며 해당 하자 내용과 이미지를 docx 파일로 다운로드 가능한 웹/앱 입니다.",
    "period": "2024.06 ~ 2024.08",
    "frontStacks": ["React-Native", "ReactJS", "Tailwind CSS"],
    "backStacks": ["Firebase"],
    "imgUrl": "",
    "gitUrl": "",
    "url": "",
    "part": ["Design", "Publishing", "Frontend", "Backend"],
    "task": [
      {
        "front": [
          "모든 스크린 퍼블리싱 진행",
          "회원가입/로그인 기능 구현",
          "자동 로그인 구현",
          "ANDROID Foreground로 앱의 업로드가 유지되는 기능 구현",
          "AsyncStorage로 하자내용 임시 CRUD 기능 구현",
          "비고란 입력 감지하여 에러 처리",
          "PERMISSION 작업",
          "Docx 다운로드 기능 구현",
          "페이지네이션 기능 구현",
          "회원/주소 검색 기능 구현"
        ],
        "back": [
          "현장 작업자당 업로드 이미지 수가 많아서 병렬로 업로드 처리",
          "storage에 이미지를 업로드하고, url을 반환해서 해당 url을 firestore에 저장",
          "업로드된 하자 내용, 회원 CRUD 구현"
        ]
      }
    ],
    "desc": ""
  },
  {
    "title": "온누리투어/관리자 웹",
    "intro": "견적상담 신청 및 업체 소개를 위한 관광버스 업체의 홈페이지 입니다.",
    "period": "2024.10 ~ 2024.10",
    "frontStacks": ["Design", "Publishing", "Frontend", "Backend"],
    "backStacks": ["NextJS", "Prisma", "Vercel", "PostgreSQL", "SENS SMS API"],
    "imgUrl": "",
    "gitUrl": "",
    "url": "https://온누리투어.com",
    "part": ["Design", "Publishing", "Frontend", "Backend"],
    "task": [
      {
        "front": [
          "모든 페이지의 PC/MO 반응형 퍼블리싱을 진행",
          "SEO를 위해 meta/sitemap/robot 설정"
        ],
        "back": [
          "REST API 구현",
          "예약 정보 CRUD 구현",
          "LMS 발송을 위해 SENS에 맞게 signature hasing하여 api 요청",
          "Cron으로 매일 견적 수가 증가되게 설정"
        ]
      }
    ],
    "desc": ""
  },
  {
    "title": "KCREDIT",
    "intro": "",
    "period": "",
    "frontStacks": [],
    "backStacks": [],
    "imgUrl": "",
    "gitUrl": "",
    "url": "",
    "part": [],
    "task": [
      {
        "front": [],
        "back": []
      }
    ],
    "desc": ""
  },
  {
    "title": "LAW",
    "intro": "",
    "period": "",
    "frontStacks": [],
    "backStacks": [],
    "imgUrl": "",
    "gitUrl": "",
    "url": "",
    "part": [],
    "task": [
      {
        "front": [],
        "back": []
      }
    ],
    "desc": ""
  },
  {
    "title": "COIN",
    "intro": "",
    "period": "",
    "frontStacks": [],
    "backStacks": [],
    "imgUrl": "",
    "gitUrl": "",
    "url": "",
    "part": [],
    "task": [
      {
        "front": [],
        "back": []
      }
    ],
    "desc": ""
  },
  {
    "title": "MIND",
    "intro": "",
    "period": "",
    "frontStacks": [],
    "backStacks": [],
    "imgUrl": "",
    "gitUrl": "",
    "url": "",
    "part": [],
    "task": [
      {
        "front": [],
        "back": []
      }
    ],
    "desc": ""
  }
]
